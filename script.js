const locations = [
    "–î–µ—Ä–µ–≤–Ω—è –≠–ª—å–º–∏—Ä", "–õ–µ—Å –¢–µ–Ω–µ–π", "–ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–π —Ö—Ä–∞–º", "–ü–µ—â–µ—Ä–∞ —Ç—Ä–æ–ª–ª–µ–π", "–†–µ–∫–∞ –ú—ë—Ä—Ç–≤—ã—Ö", "–ë–∞—à–Ω—è –∫–æ–ª–¥—É–Ω–∞"
];

const items = ["–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è", "–ú–µ—á", "–©–∏—Ç", "–ö–∞—Ä—Ç–∞ –ø–æ–¥–∑–µ–º–µ–ª—å—è", "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª"];

const shopItems = [
    { name: "–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è", price: 10, effect: () => healPlayer(30) }
];

const enemies = [
    { name: "–ì–æ–±–ª–∏–Ω", hp: 30, attack: 5, reward: { exp: 10, gold: 5 } },
    { name: "–°–∫–µ–ª–µ—Ç", hp: 40, attack: 7, reward: { exp: 15, gold: 10 } },
    { name: "–¢—Ä–æ–ª–ª—å", hp: 60, attack: 10, reward: { exp: 20, gold: 15 } },
    { name: "–û—Ä–∫", hp: 50, attack: 8, reward: { exp: 18, gold: 12 } },
    { name: "–¢–µ–º–Ω—ã–π –º–∞–≥", hp: 45, attack: 9, reward: { exp: 22, gold: 18 } },
    { name: "–í–æ–ª–∫", hp: 35, attack: 6, reward: { exp: 12, gold: 6 } }
];

// –ó–∞–¥–∞–Ω–∏—è —Å —Ü–µ–ª—è–º–∏ –∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏
const quests = [
    {
        id: 1,
        title: "–ü–æ–±–µ–¥–∏—Ç—å –≥–æ–±–ª–∏–Ω–∞",
        target: "–ì–æ–±–ª–∏–Ω",
        targetCount: 1,
        reward: { gold: 20, items: ["–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è"] }
    },
    {
        id: 2,
        title: "–ü—Ä–∏–Ω–µ—Å—Ç–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª",
        target: null,
        targetCount: 0,
        reward: { gold: 10, items: ["–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª"] }
    }
];

function startGame() {
    const screen = document.getElementById("screen");
    screen.innerHTML = `
        <h2>–°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h2>
        <input type="text" id="name" placeholder="–ò–º—è –≥–µ—Ä–æ—è"><br><br>
        <select id="class">
            <option value="–í–æ–∏–Ω">–í–æ–∏–Ω</option>
            <option value="–ú–∞–≥">–ú–∞–≥</option>
            <option value="–†–∞–∑–±–æ–π–Ω–∏–∫">–†–∞–∑–±–æ–π–Ω–∏–∫</option>
        </select><br><br>
        <button onclick="createCharacter()">–°–æ–∑–¥–∞—Ç—å</button>
    `;
}

function createCharacter() {
    const name = document.getElementById("name").value;
    const charClass = document.getElementById("class").value;
    if (!name) {
        alert("–í–≤–µ–¥–∏—Ç–µ –∏–º—è!");
        return;
    }
    const player = {
        name: name,
        class: charClass,
        hp: 100,
        inventory: [],
        location: "–î–µ—Ä–µ–≤–Ω—è –≠–ª—å–º–∏—Ä",
        quest: null,
        exp: 0,
        gold: 0
    };
    localStorage.setItem("player", JSON.stringify(player));
    showMainScreen();
}

function showMainScreen() {
    const player = JSON.parse(localStorage.getItem("player"));
    const screen = document.getElementById("screen");
    let questText = player.quest ? `<p>–ó–∞–¥–∞–Ω–∏–µ: ${player.quest.title} (–ü—Ä–æ–≥—Ä–µ—Å—Å: ${player.quest.progress || 0}/${player.quest.targetCount})</p>` : "";
    screen.innerHTML = `
        <h2>${player.name} (${player.class})</h2>
        <p>HP: ${player.hp} | Exp: ${player.exp} | üí∞: ${player.gold}</p>
        <p>–õ–æ–∫–∞—Ü–∏—è: ${player.location}</p>
        ${questText}
        <button onclick="explore()">–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è</button>
        <button onclick="showInventory()">–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</button>
        <button onclick="startBattle()">–ë–∏—Ç–≤–∞</button>
        <button onclick="getQuest()">–ó–∞–¥–∞–Ω–∏–µ</button>
        <button onclick="openShop()">–ú–∞–≥–∞–∑–∏–Ω</button>
        <button onclick="openMap()">–ö–∞—Ä—Ç–∞</button>
        <button onclick="resetGame()">–°–±—Ä–æ—Å–∏—Ç—å</button>
    `;
}

function explore() {
    const player = JSON.parse(localStorage.getItem("player"));
    const newLocation = locations[Math.floor(Math.random() * locations.length)];
    player.location = newLocation;
    if (Math.random() > 0.7) {
        const foundItem = items[Math.floor(Math.random() * items.length)];
        player.inventory.push(foundItem);
        alert(`–í—ã –Ω–∞—à–ª–∏ ${foundItem} –≤ ${newLocation}`);
    } else {
        alert(`–í—ã –ø—Ä–∏–±—ã–ª–∏ –≤ ${newLocation}`);
    }
    localStorage.setItem("player", JSON.stringify(player));
    showMainScreen();
}

function showInventory() {
    const player = JSON.parse(localStorage.getItem("player"));
    if (player.inventory.length) {
        let content = "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:\n";
        player.inventory.forEach((item, i) => {
            content += `${i + 1}) ${item}\n`;
        });
        const use = confirm(content + "\n–•–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è?");
        if (use && player.inventory.includes("–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è")) {
            player.inventory.splice(player.inventory.indexOf("–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è"), 1);
            player.hp = Math.min(player.hp + 30, 100);
            alert("–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∑–µ–ª—å–µ. HP –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.");
        }
    } else {
        alert("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.");
    }
    localStorage.setItem("player", JSON.stringify(player));
    showMainScreen();
}

function startBattle() {
    const enemy = JSON.parse(JSON.stringify(enemies[Math.floor(Math.random() * enemies.length)]));
    const player = JSON.parse(localStorage.getItem("player"));
    let battleLog = `–í—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ ${enemy.name}!\n`;
    while (enemy.hp > 0 && player.hp > 0) {
        enemy.hp -= 15;
        player.hp -= enemy.attack;
        battleLog += `–í—ã —É–¥–∞—Ä–∏–ª–∏ ${enemy.name}, –µ–≥–æ HP: ${enemy.hp}\n`;
        battleLog += `${enemy.name} –∞—Ç–∞–∫—É–µ—Ç –≤–∞—Å. –í–∞—à HP: ${player.hp}\n`;
    }
    if (player.hp > 0) {
        battleLog += `–í—ã –ø–æ–±–µ–¥–∏–ª–∏ ${enemy.name}!\n+${enemy.reward.exp} –æ–ø—ã—Ç–∞, +${enemy.reward.gold} –º–æ–Ω–µ—Ç`;
        player.exp += enemy.reward.exp;
        player.gold += enemy.reward.gold;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
        if (player.quest && player.quest.target === enemy.name) {
            player.quest.progress = (player.quest.progress || 0) + 1;
            if (player.quest.progress >= player.quest.targetCount) {
                battleLog += "\n–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ù–∞–≥—Ä–∞–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞.";
                player.gold += player.quest.reward.gold || 0;
                if (player.quest.reward.items) {
                    player.inventory.push(...player.quest.reward.items);
                }
                player.quest = null; // —Å–Ω–∏–º–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ
            } else {
                battleLog += `\n–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏—è: ${player.quest.progress} –∏–∑ ${player.quest.targetCount}`;
            }
        }
    } else {
        battleLog += "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏... –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.";
        localStorage.removeItem("player");
        alert(battleLog);
        location.reload();
        return;
    }
    alert(battleLog);
    localStorage.setItem("player", JSON.stringify(player));
    showMainScreen();
}

function getQuest() {
    const player = JSON.parse(localStorage.getItem("player"));
    if (player.quest) {
        alert(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞–¥–∞–Ω–∏–µ: ${player.quest.title}`);
        return;
    }
    const quest = quests[Math.floor(Math.random() * quests.length)];
    player.quest = {
        id: quest.id,
        title: quest.title,
        target: quest.target,
        targetCount: quest.targetCount,
        reward: quest.reward,
        progress: 0
    };
    alert(`–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${quest.title}. –ù–∞–≥—Ä–∞–¥–∞: –∑–æ–ª–æ—Ç–æ ${quest.reward.gold}, –ø—Ä–µ–¥–º–µ—Ç—ã: ${quest.reward.items ? quest.reward.items.join(", ") : "–Ω–µ—Ç"}`);
    localStorage.setItem("player", JSON.stringify(player));
    showMainScreen();
}

function openShop() {
    const player = JSON.parse(localStorage.getItem("player"));
    let shopText = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω:\n";
    shopItems.forEach((item, index) => {
        shopText += `${index + 1}) ${item.name} - ${item.price} –º–æ–Ω–µ—Ç\n`;
    });
    const choice = prompt(shopText + "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:");
    const selected = shopItems[parseInt(choice) - 1];
    if (selected && player.gold >= selected.price) {
        player.gold -= selected.price;
        player.inventory.push(selected.name);
        alert(`–í—ã –∫—É–ø–∏–ª–∏ ${selected.name}`);
    } else {
        alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
    }
    localStorage.setItem("player", JSON.stringify(player));
    showMainScreen();
}

function openMap() {
    const player = JSON.parse(localStorage.getItem("player"));
    let mapText = "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è:\n";
    locations.forEach((loc, i) => {
        mapText += `${i + 1}) ${loc}\n`;
    });
    const choice = prompt(mapText + "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–æ–∫–∞—Ü–∏–∏:");
    const selected = locations[parseInt(choice) - 1];
    if (selected) {
        player.location = selected;
        alert(`–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ ${selected}`);
        localStorage.setItem("player", JSON.stringify(player));
    } else {
        alert("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
    }
    showMainScreen();
}

function healPlayer(amount) {
    const player = JSON.parse(localStorage.getItem("player"));
    player.hp = Math.min(player.hp + amount, 100);
    alert(`–í—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ ${amount} HP!`);
    localStorage.setItem("player", JSON.stringify(player));
}

function resetGame() {
    localStorage.removeItem("player");
    location.reload();
}

window.onload = () => {
    if (localStorage.getItem("player")) {
        showMainScreen();
    }
};
